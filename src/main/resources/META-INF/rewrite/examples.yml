# Copyright 2025 the original author or authors.
# <p>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
type: specs.openrewrite.org/v1beta/example
recipeName: org.openrewrite.java.dropwizard.annotation.AddClassAnnotationIfAnnotationExists
examples:
- description: ''
  parameters:
  - javax.persistence.Entity
  - javax.persistence.Table
  - 'false'
  sources:
  - before: |
      import javax.persistence.Table;

      @Table
      public class Customer {
          private String name;
      }
    after: |
      import javax.persistence.Entity;
      import javax.persistence.Table;

      @Entity
      @Table
      public class Customer {
          private String name;
      }
    language: java
---
type: specs.openrewrite.org/v1beta/example
recipeName: org.openrewrite.java.dropwizard.annotation.AddClassAnnotationIfSuperTypeExists
examples:
- description: ''
  parameters:
  - javax.persistence.Entity
  - java.util.AbstractList
  - 'false'
  sources:
  - before: |
      import java.util.AbstractList;

      public class CustomList extends AbstractList<String> {
          @Override
          public String get(int index) {
              return null;
          }

          @Override
          public int size() {
              return 0;
          }
      }
    after: |
      import javax.persistence.Entity;

      import java.util.AbstractList;

      @Entity
      public class CustomList extends AbstractList<String> {
          @Override
          public String get(int index) {
              return null;
          }

          @Override
          public int size() {
              return 0;
          }
      }
    language: java
---
type: specs.openrewrite.org/v1beta/example
recipeName: org.openrewrite.java.dropwizard.annotation.micrometer.CodahaleTimedToMicrometerTimed
examples:
- description: ''
  sources:
  - before: |
      package com.example;

      import com.codahale.metrics.annotation.Timed;

      class TestClass {
          @Timed
          public void timedMethod() {
          }
      }
    after: |
      package com.example;

      import io.micrometer.core.annotation.Timed;

      class TestClass {
          @Timed
          public void timedMethod() {
          }
      }
    language: java
